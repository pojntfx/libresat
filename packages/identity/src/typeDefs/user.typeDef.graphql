type User {
  _id: String!
  name: String!
  password: String!
  roles: [Role]
}

type Mutation {
  createUser(roleId: String!, name: String!, password: String!): User
  updateUser(name: String, password: String): User
  deleteUser: User
  deleteAllUsers: [User]
  authorizeByOrgAndRoles(organizationName: String!, roleNames: [String]!): User # Username & Password should be passed through with HTTP Headers
}

type Query {
  user(id: String!): User
  users(filter: UserFilterInput): [User]
}

input UserFilterInput {
  _id: String
  name: String
}
