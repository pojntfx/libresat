apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: traefik-ingress-lb
  name: traefik-ingress-controller
  namespace: {{ .Release.Namespace }}
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
    spec:
      containers:
        # Uncomment below to use DNS challenge (with HTTPS subdomains)
        {{ if (.Values.acme.challenge.type) eq "dns" }}
        - args:
            - "--api"
            - "--kubernetes"
            - "--logLevel=DEBUG"
            - "--debug"
            - "--defaultentrypoints=http,https"
            - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
            - "--entrypoints=Name:https Address::443 TLS"
            - "--acme"
            - "--acme.onhostrule"
            - "--acme.entrypoint=https"
            - "--acme.domains={{ .Values.acme.domains }}" # Change this to your own domain
            - "--acme.email={{ .Values.acme.email }}" # Change this to your own email
            - "--acme.storage=/certs/acme.json"
            - "--acme.dnschallenge"
            - "--acme.dnschallenge.provider=gandiv5"
          env:
            - name: GANDIV5_API_KEY
              value: "{{ .Values.acme.challenge.gandiV5ApiKey }}" # Change this to your API key
        {{ else if (.Values.acme.challenge.type) eq "http" }}
        - args:
            - "--defaultentrypoints=http,https"
            - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
            - "--entrypoints=Name:https Address::443 TLS"
            - "--acme"
            - "--acme.onhostrule"
            - "--acme.entrypoint=https"
            - "--acme.domains={{ .Values.acme.domains }}" # Change this to your own domain
            - "--acme.email={{ .Values.acme.email }}" # Change this to your own email
            - "--acme.storage=/certs/acme.json"
            - "--acme.httpchallenge"
            - "--acme.httpchallenge.entrypoint=http"
        {{ end }}
          image: traefik:alpine
          name: traefik-ingress-lb
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
            - containerPort: 443
              hostPort: 443
              name: https
            - containerPort: 8080
              name: admin
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
          volumeMounts:
            - mountPath: /certs
              name: certificates-claim
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      volumes:
        - name: certificates-claim
          persistentVolumeClaim:
            claimName: certificates-claim