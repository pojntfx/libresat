apiVersion: v1
kind: Secret
metadata:
  name: digitalocean
  namespace: kube-system
stringData:
  access-token: aea49b44153366a99dc0c4d86bb188db9313ab78f2e2af92ee932ea8e88d16a7
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: traefik-ingress-controller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: traefik-ingress-controller
subjects:
  - kind: ServiceAccount
    name: traefik-ingress-controller
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: traefik-ingress-controller
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - extensions
    resources:
      - ingresses
    verbs:
      - get
      - list
      - watch
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: certs-claim
  namespace: kube-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: do-block-storage
---
apiVersion: v1
kind: Service
metadata:
  name: traefik-ingress-service
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
    - name: https
      port: 443
      protocol: TCP
    - name: admin
      port: 8080
      protocol: TCP
  selector:
    k8s-app: traefik-ingress-lb
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    k8s-app: traefik-ingress-lb
  name: traefik-ingress-controller
  namespace: kube-system
spec:
  template:
    metadata:
      labels:
        k8s-app: traefik-ingress-lb
    spec:
      containers:
        - args:
            - "--api"
            - "--kubernetes"
            - "--logLevel=DEBUG"
            - "--debug"
            - "--defaultentrypoints=http,https"
            - "--entrypoints=Name:http Address::80 Redirect.EntryPoint:https"
            - "--entrypoints=Name:https Address::443 TLS"
            - "--acme"
            - "--acme.onhostrule"
            - "--acme.entrypoint=https"
            - "--acme.domains=libresat.space"
            - "--acme.email=felicitas@pojtinger.com"
            - "--acme.storage=/certs/acme.json"
            - "--acme.httpchallenge"
            - "--acme.httpchallenge.entrypoint=http"
          image: traefik:1.7-alpine
          name: traefik-ingress-lb
          ports:
            - containerPort: 80
              hostPort: 80
              name: http
            - containerPort: 443
              hostPort: 443
              name: https
            - containerPort: 8080
              hostPort: 8080
              name: admin
          securityContext:
            capabilities:
              add:
                - NET_BIND_SERVICE
              drop:
                - ALL
          volumeMounts:
            - mountPath: /certs
              name: certs-claim
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 60
      volumes:
        - name: certs-claim
          persistentVolumeClaim:
            claimName: certs-claim
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: traefik
  name: helloworld
spec:
  rules:
    - host: stg1.libresat.space
      http:
        paths:
          - backend:
              serviceName: helloworld
              servicePort: web
            path: /
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: helloworld
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: helloworld
    spec:
      containers:
        - image: mikewilliamson/helloworld
          imagePullPolicy: Always
          name: web
          ports:
            - containerPort: 3000
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: helloworld
spec:
  ports:
    - name: web
      port: 80
      targetPort: 3000
  selector:
    app: helloworld
  type: ClusterIP
